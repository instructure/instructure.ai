name: Release Packages

on:
  workflow_run:
    workflows: ["Tag on Merge"]
    types:
      - completed

permissions:
  id-token: write
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags

      - name: Find all new package tags on this commit
        id: find_tags
        run: |
          TAGS=$(git tag --points-at HEAD | grep -E '^@instructure.ai/.+@([0-9]+\.[0-9]+\.[0-9]+)$' || true)
          if [[ -z "$TAGS" ]]; then
            echo "No new matching tags found on this commit."
            exit 0
          fi
          # Save tags list for next steps
          echo "tags<<EOF" >> $GITHUB_ENV
          echo "$TAGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Release each package tag
        if: env.tags != ''
        run: |
          IFS=$'\n'
          for TAG in $tags; do
            PKG_NAME=$(echo "$TAG" | sed -E 's/@instructure.ai\/([^@]+)@.*/\1/')
            echo "Processing release for tag: $TAG (package: $PKG_NAME)"

            # Remove deprecated always-auth from .npmrc
            if [ -f "$HOME/.npmrc" ]; then
              sed -i.bak '/always-auth/d' "$HOME/.npmrc"
            fi

            # Install dependencies
            npm install -g pnpm
            pnpm install --frozen-lockfile

            # Build
            if [ "$PKG_NAME" = "shared-configs" ]; then
              echo "Skipping build for @instructure.ai/shared-configs."
            else
              echo "Building package: $PKG_NAME"
              pnpm build package "$PKG_NAME"
            fi

            # Test
            if [ "$PKG_NAME" = "shared-configs" ]; then
              echo "Skipping test for @instructure.ai/shared-configs."
            else
              pnpm test
            fi

            # Publish
            if [ "$PKG_NAME" = "shared-configs" ]; then
              echo "Skipping publish for @instructure.ai/shared-configs."
            else
              pnpm publish
            fi

            # Create GitHub release using gh CLI
            if [ "$PKG_NAME" = "shared-configs" ]; then
              gh release create "$TAG" --title "Release $TAG" --notes "Automated release of $TAG"
            else
              gh release create "$TAG" ./dist/*.tgz --title "Release $TAG" --notes "Automated release of $TAG"
            fi
          done
        env:
          tags: ${{ env.tags }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}